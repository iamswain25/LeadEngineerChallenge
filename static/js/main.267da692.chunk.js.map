{"version":3,"sources":["components/RecursiveList.tsx","components/DetailModal.tsx","components/CardSingle.tsx","components/Cards.tsx","components/Pagination.tsx","components/HomeGrid.tsx","components/TableIcons.tsx","components/TableMaterial.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RecursiveList","data","Object","keys","map","key","Array","isArray","str","index","JSON","stringify","useStyles","makeStyles","theme","paper","maxWidth","maxHeight","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","margin","overflow","DetailModal","props","classes","rest","Modal","aria-labelledby","aria-describedby","className","Grid","container","alignItems","justify","id","first_name","IconButton","onClick","onClose","root","cursor","borderRadius","title","fontSize","pos","marginBottom","strikethrough","textDecoration","insured","color","uninsured","deceased","textRight","textAlign","CardSingle","React","useState","open","setOpen","Card","CardContent","Typography","gutterBottom","Chip","size","label","variant","component","last_name","ssn","birthdate","Cards","card","xs","sm","md","item","Pagination","pageCount","useMemo","length","offset","setOffset","useEffect","slice","activeClassName","breakClassName","breakLabel","containerClassName","disabledClassName","marginPagesDisplayed","nextClassName","nextLabel","style","onPageChange","selected","pageClassName","pageRangeDisplayed","previousClassName","previousLabel","HomeGrid","searchString","setSearchString","sortBy","setSortBy","desc","setDesc","filteredData","filter","includes","sort","a","b","Container","wrap","type","value","onChange","ev","target","NativeSelect","event","Button","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","TableMaterial","icons","options","pageSize","detailPanel","rowData","columns","field","searchable","createMuiTheme","primary","main","App","ThemeProvider","basename","process","to","path","exact","render","patients","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.267da692.chunk.js","sourcesContent":["function RecursiveList({ data }: { data: any }) {\n  return (\n    <ul>\n      {Object.keys(data).map((key) => {\n        if (key === \"tableData\") return null;\n        return (\n          <li key={\"row-id-\" + key}>\n            {key}:\n            {typeof data[key] === \"string\" ? (\n              \" \" + data[key]\n            ) : Array.isArray(data[key]) ? (\n              <ul>\n                {data[key]?.map((str: string, index: number) => (\n                  <li key={\"row-id-\" + index}>{str}</li>\n                ))}\n              </ul>\n            ) : data[key] instanceof Object ? (\n              <RecursiveList data={data[key]} />\n            ) : (\n              JSON.stringify(data[key])\n            )}\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\nexport default RecursiveList;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Modal from \"@material-ui/core/Modal\";\nimport RecursiveList from \"./RecursiveList\";\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    // position: \"absolute\",\n    // minWidth: 400,\n    maxWidth: \"90%\",\n    maxHeight: \"90%\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    margin: \"30px auto\",\n    overflow: \"auto\",\n  },\n}));\nexport default function DetailModal(props: any) {\n  const classes = useStyles();\n  const { data, ...rest } = props;\n  return (\n    <Modal\n      {...rest}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n      <div className={classes.paper}>\n        <Grid container alignItems=\"center\" justify=\"space-between\">\n          <h2 id=\"simple-modal-title\">{data.first_name}</h2>\n          <IconButton onClick={rest.onClose}>\n            <CloseIcon />\n          </IconButton>\n        </Grid>\n        <RecursiveList data={data} />\n      </div>\n    </Modal>\n  );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CakeIcon from \"@material-ui/icons/Cake\";\nimport { Grid, Chip } from \"@material-ui/core\";\nimport React from \"react\";\nimport DetailModal from \"./DetailModal\";\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"&:hover\": {\n      cursor: \"pointer\",\n      borderRadius: 50,\n      boxShadow: \"12px 12px 2px 1px rgba(111, 191, 115, .2)\",\n    },\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  strikethrough: {\n    textDecoration: \"line-through\",\n  },\n  insured: {\n    backgroundColor: \"#2979ff\",\n    color: \"#fff\",\n  },\n  uninsured: {\n    backgroundColor: \"#ff9100\",\n  },\n  deceased: {\n    backgroundColor: \"#000\",\n    color: \"#fff\",\n  },\n  textRight: {\n    textAlign: \"right\",\n  },\n}));\nexport default function CardSingle({ data }: any) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return (\n    <>\n      <Card className={classes.root} onClick={handleOpen}>\n        <CardContent>\n          <Grid container justify=\"space-between\">\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n            >\n              {data.id}\n            </Typography>\n            <div>\n              <div className={classes.textRight}>\n                <Chip\n                  size=\"small\"\n                  classes={{\n                    root: data.insured ? classes.insured : classes.uninsured,\n                  }}\n                  label={data.insured ? \"insured\" : \"uninsured\"}\n                />\n              </div>\n              {data.deceased && (\n                <div className={classes.textRight}>\n                  <Chip\n                    size=\"small\"\n                    classes={{\n                      root: classes.deceased,\n                    }}\n                    label=\"deceased\"\n                  />\n                </div>\n              )}\n            </div>\n          </Grid>\n          <Typography variant=\"h5\" component=\"h2\">\n            <Grid container alignItems=\"center\">\n              {data.first_name}\n            </Grid>\n          </Typography>\n          <Typography className={classes.pos} color=\"textSecondary\">\n            {data.last_name}\n          </Typography>\n          <Typography variant=\"h6\">\n            <Grid container alignItems=\"center\">\n              <PermIdentityIcon fontSize=\"small\" /> {data.ssn}\n            </Grid>\n          </Typography>\n          <Typography variant=\"h6\">\n            <Grid container alignItems=\"center\">\n              <CakeIcon fontSize=\"small\" /> {data.birthdate}\n            </Grid>\n          </Typography>\n        </CardContent>\n      </Card>\n      <DetailModal open={open} onClose={handleClose} data={data} />\n    </>\n  );\n}\n","import { Grid, makeStyles } from \"@material-ui/core\";\nimport CardSingle from \"./CardSingle\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1, 0),\n  },\n}));\nexport default function Cards({ data }: any) {\n  const classes = useStyles();\n  return (\n    <section className={classes.root}>\n      <Grid container spacing={2}>\n        {data.map((card: any) => (\n          <Grid key={card.id} xs={12} sm={6} md={3} item>\n            <CardSingle data={card} />\n          </Grid>\n        ))}\n      </Grid>\n    </section>\n  );\n}\n","import ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ReactPaginate from \"react-paginate\";\nimport React from \"react\";\nimport Cards from \"./Cards\";\nimport \"./pagination.css\";\nconst COUNT_PER_PAGE = 20;\nexport default function Pagination({ data }: any) {\n  const pageCount = React.useMemo(() => data.length / COUNT_PER_PAGE, [data]);\n  const [offset, setOffset] = React.useState(0);\n  function handlePageClick({ selected }: { selected: number }) {\n    const offset = COUNT_PER_PAGE * selected;\n    setOffset(offset);\n  }\n  React.useEffect(() => {\n    setOffset(0);\n  }, [data]);\n  return (\n    <>\n      <Cards data={data.slice(offset, offset + 20)} />\n      <ReactPaginate\n        activeClassName={\"item active \"}\n        breakClassName={\"item break-me \"}\n        breakLabel={\"...\"}\n        containerClassName={\"pagination\"}\n        disabledClassName={\"disabled-page\"}\n        marginPagesDisplayed={2}\n        nextClassName={\"item next \"}\n        nextLabel={<ArrowForwardIosIcon style={{ fontSize: 18 }} />}\n        onPageChange={handlePageClick}\n        pageCount={pageCount}\n        pageClassName={\"item pagination-page \"}\n        pageRangeDisplayed={2}\n        previousClassName={\"item previous\"}\n        previousLabel={<ArrowBackIosIcon style={{ fontSize: 18 }} />}\n      />\n    </>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { Button, Container, Grid } from \"@material-ui/core\";\nimport Pagination from \"./Pagination\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nfunction HomeGrid({ data }: any) {\n  const [searchString, setSearchString] = React.useState(\"\");\n  const [sortBy, setSortBy] = React.useState(\"id\");\n  const [desc, setDesc] = React.useState(true);\n  const filteredData = useMemo(\n    () =>\n      data?.filter((item: any) => {\n        return (\n          item.ssn.includes(searchString) || item.id.includes(searchString)\n        );\n      }),\n    [searchString, data]\n  );\n  const handleChangeSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSortBy(event.target.value);\n  };\n  const handleBtnDesc = () => setDesc(!desc);\n  React.useEffect(() => {\n    filteredData.sort((a: any, b: any) => {\n      if (desc) {\n        return a?.[sortBy] > b?.[sortBy] ? 1 : -1;\n      } else {\n        return a?.[sortBy] > b?.[sortBy] ? -1 : 1;\n      }\n    });\n  }, [sortBy, desc, filteredData]);\n  return (\n    <Container>\n      <h1>Patients List</h1>\n      <Grid container wrap=\"wrap\" alignItems=\"center\" justify=\"space-between\">\n        <Grid>\n          Search id or ssn:{\" \"}\n          <input\n            type=\"text\"\n            value={searchString}\n            onChange={(ev) => setSearchString(ev.target.value)}\n          />\n        </Grid>\n        <Grid>\n          sort by{\" \"}\n          <NativeSelect\n            variant=\"outlined\"\n            value={sortBy}\n            onChange={handleChangeSelect}\n          >\n            <option value=\"id\">ID</option>\n            <option value=\"first_name\">First Name</option>\n          </NativeSelect>\n          <Button\n            color=\"primary\"\n            size=\"small\"\n            onClick={handleBtnDesc}\n            variant=\"contained\"\n          >\n            {desc ? \"DESC\" : \"ASC\"}\n          </Button>\n        </Grid>\n      </Grid>\n      <Pagination data={filteredData} />\n    </Container>\n  );\n}\n\nexport default HomeGrid;\n","import { forwardRef } from \"react\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport { Icons } from \"material-table\";\n\nexport const tableIcons: Icons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n","import MaterialTable from \"material-table\";\nimport RecursiveList from \"./RecursiveList\";\nimport { tableIcons } from \"./TableIcons\";\nexport default function TableMaterial({ data }: any) {\n  return (\n    <section>\n      <MaterialTable\n        icons={tableIcons}\n        options={{ pageSize: 20 }}\n        detailPanel={(rowData: any) => {\n          return (\n            <div>\n              <RecursiveList data={rowData} />\n            </div>\n          );\n        }}\n        columns={[\n          { title: \"id\", field: \"id\", searchable: true },\n          { title: \"first_name\", field: \"first_name\", searchable: false },\n          { title: \"last_name\", field: \"last_name\", searchable: false },\n          { title: \"email\", field: \"email\", searchable: false },\n          { title: \"gender\", field: \"gender\", searchable: false },\n          { title: \"ethnicity\", field: \"ethnicity\", searchable: false },\n          { title: \"birthdate\", field: \"birthdate\", searchable: false },\n          { title: \"ssn\", field: \"ssn\", searchable: true },\n          {\n            title: \"insured\",\n            field: \"insured\",\n            type: \"boolean\",\n            searchable: false,\n          },\n          {\n            title: \"deceased\",\n            field: \"deceased\",\n            type: \"boolean\",\n            searchable: false,\n          },\n          // {\n          //   title: \"diagnosis\",\n          //   field: \"diagnosis\",\n          //   render: (rowData) => <div>{JSON.stringify(rowData.diagnosis)}</div>,\n          // },\n          // {\n          //   title: \"pcp\",\n          //   field: \"pcp\",\n          //   render: (rowData) => <div>{JSON.stringify(rowData.pcp)}</div>,\n          // },\n        ]}\n        data={data}\n        title=\"patient data\"\n      />\n    </section>\n  );\n}\n","import { ThemeProvider, createMuiTheme, Theme } from \"@material-ui/core\";\nimport React from \"react\";\nimport { BrowserRouter, Route, Switch, Link, Redirect } from \"react-router-dom\";\nimport HomeGrid from \"./components/HomeGrid\";\nimport TableMaterial from \"./components/TableMaterial\";\nimport { patients } from \"./db.json\";\nexport const theme: Theme = createMuiTheme({\n  palette: {\n    primary: { main: \"#30B568\" },\n  },\n});\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <ul>\n          <li>\n            <Link to=\"/grid\">Grid List</Link>\n          </li>\n          <li>\n            <Link to=\"/table\">Table List</Link>\n          </li>\n        </ul>\n\n        <hr />\n        <Switch>\n          <Route\n            path=\"/grid\"\n            exact\n            render={() => <HomeGrid data={patients} />}\n          />\n          <Route\n            path=\"/table\"\n            exact\n            render={() => <TableMaterial data={patients} />}\n          />\n          <Route path=\"*\">\n            <Redirect to=\"/grid\" />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}