{"version":3,"sources":["components/RecursiveList.tsx","components/DetailModal.tsx","components/CardSingle.tsx","components/Cards.tsx","components/Pagination.tsx","components/HomeGrid.tsx","components/TableIcons.tsx","components/TableMaterial.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RecursiveList","data","Object","keys","map","key","Array","isArray","str","index","JSON","stringify","useStyles","makeStyles","theme","paper","maxWidth","maxHeight","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","margin","overflow","DetailModal","props","classes","rest","Modal","aria-labelledby","aria-describedby","className","Grid","container","alignItems","justify","id","first_name","IconButton","onClick","onClose","root","title","fontSize","pos","marginBottom","strikethrough","textDecoration","CardSingle","React","useState","open","setOpen","Card","variant","CardContent","Typography","color","gutterBottom","component","deceased","undefined","Tooltip","insured","aria-label","interactive","enterTouchDelay","htmlColor","last_name","ssn","birthdate","CardActions","Button","size","Cards","card","xs","sm","md","item","Pagination","pageCount","useMemo","length","offset","setOffset","useEffect","slice","activeClassName","breakClassName","breakLabel","containerClassName","disabledClassName","marginPagesDisplayed","nextClassName","nextLabel","style","onPageChange","selected","pageClassName","pageRangeDisplayed","previousClassName","previousLabel","HomeGrid","searchString","setSearchString","filteredData","filter","includes","Container","wrap","type","value","onChange","ev","target","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","TableMaterial","icons","options","pageSize","detailPanel","rowData","columns","field","searchable","App","to","path","exact","render","patients","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f83a7711.chunk.js","sourcesContent":["function RecursiveList({ data }: { data: any }) {\n  return (\n    <ul>\n      {Object.keys(data).map((key) => {\n        if (key === \"tableData\") return null;\n        return (\n          <li key={\"row-id-\" + key}>\n            {key}:\n            {typeof data[key] === \"string\" ? (\n              \" \" + data[key]\n            ) : Array.isArray(data[key]) ? (\n              <ul>\n                {data[key]?.map((str: string, index: number) => (\n                  <li key={\"row-id-\" + index}>{str}</li>\n                ))}\n              </ul>\n            ) : data[key] instanceof Object ? (\n              <RecursiveList data={data[key]} />\n            ) : (\n              JSON.stringify(data[key])\n            )}\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\nexport default RecursiveList;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Modal from \"@material-ui/core/Modal\";\nimport RecursiveList from \"./RecursiveList\";\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    // position: \"absolute\",\n    // minWidth: 400,\n    maxWidth: \"90%\",\n    maxHeight: \"90%\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    margin: \"30px auto\",\n    overflow: \"auto\",\n  },\n}));\nexport default function DetailModal(props: any) {\n  const classes = useStyles();\n  const { data, ...rest } = props;\n  return (\n    <Modal\n      {...rest}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n      <div className={classes.paper}>\n        <Grid container alignItems=\"center\" justify=\"space-between\">\n          <h2 id=\"simple-modal-title\">{data.first_name}</h2>\n          <IconButton onClick={rest.onClose}>\n            <CloseIcon />\n          </IconButton>\n        </Grid>\n        <RecursiveList data={data} />\n      </div>\n    </Modal>\n  );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CakeIcon from \"@material-ui/icons/Cake\";\nimport { Grid, Tooltip } from \"@material-ui/core\";\nimport React from \"react\";\nimport DetailModal from \"./DetailModal\";\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // minWidth: 275,\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  strikethrough: {\n    textDecoration: \"line-through\",\n  },\n}));\nexport default function CardSingle({ data }: any) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography\n          className={classes.title}\n          color=\"textSecondary\"\n          gutterBottom\n        >\n          {data.id}\n        </Typography>\n\n        <Typography\n          variant=\"h5\"\n          component=\"h2\"\n          className={data.deceased ? classes.strikethrough : undefined}\n        >\n          <Grid container alignItems=\"center\">\n            {data.first_name}\n            <Tooltip\n              title={data.insured ? \"insured\" : \"not insured\"}\n              aria-label={data.insured ? \"insured\" : \"not insured\"}\n              interactive\n              enterTouchDelay={100}\n            >\n              {data.insured ? (\n                <CheckIcon htmlColor=\"#30B568\" />\n              ) : (\n                <RemoveCircleOutlineIcon />\n              )}\n            </Tooltip>\n          </Grid>\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          {data.last_name}\n        </Typography>\n        <Typography variant=\"h6\">\n          <Grid container alignItems=\"center\">\n            <PermIdentityIcon fontSize=\"small\" /> {data.ssn}\n          </Grid>\n        </Typography>\n        <Typography variant=\"h6\">\n          <Grid container alignItems=\"center\">\n            <CakeIcon fontSize=\"small\" /> {data.birthdate}\n          </Grid>\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\" onClick={handleOpen}>\n          Detail\n        </Button>\n        <DetailModal open={open} onClose={handleClose} data={data} />\n      </CardActions>\n    </Card>\n  );\n}\n","import { Grid, makeStyles } from \"@material-ui/core\";\nimport CardSingle from \"./CardSingle\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1, 0),\n  },\n}));\nexport default function Cards({ data }: any) {\n  const classes = useStyles();\n  return (\n    <section className={classes.root}>\n      <Grid container spacing={2}>\n        {data.map((card: any) => (\n          <Grid key={card.id} xs={12} sm={6} md={3} item>\n            <CardSingle data={card} />\n          </Grid>\n        ))}\n      </Grid>\n    </section>\n  );\n}\n","import ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ReactPaginate from \"react-paginate\";\nimport React from \"react\";\nimport Cards from \"./Cards\";\nimport \"./pagination.css\";\nconst COUNT_PER_PAGE = 20;\nexport default function Pagination({ data }: any) {\n  const pageCount = React.useMemo(() => data.length / COUNT_PER_PAGE, [data]);\n  const [offset, setOffset] = React.useState(0);\n  function handlePageClick({ selected }: { selected: number }) {\n    const offset = COUNT_PER_PAGE * selected;\n    setOffset(offset);\n  }\n  React.useEffect(() => {\n    setOffset(0);\n  }, [data]);\n  return (\n    <>\n      <Cards data={data.slice(offset, offset + 20)} />\n      <ReactPaginate\n        activeClassName={\"item active \"}\n        breakClassName={\"item break-me \"}\n        breakLabel={\"...\"}\n        containerClassName={\"pagination\"}\n        disabledClassName={\"disabled-page\"}\n        marginPagesDisplayed={2}\n        nextClassName={\"item next \"}\n        nextLabel={<ArrowForwardIosIcon style={{ fontSize: 18 }} />}\n        onPageChange={handlePageClick}\n        pageCount={pageCount}\n        pageClassName={\"item pagination-page \"}\n        pageRangeDisplayed={2}\n        previousClassName={\"item previous\"}\n        previousLabel={<ArrowBackIosIcon style={{ fontSize: 18 }} />}\n      />\n    </>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport Pagination from \"./Pagination\";\n\nfunction HomeGrid({ data }: any) {\n  const [searchString, setSearchString] = React.useState(\"\");\n  const filteredData = useMemo(\n    () =>\n      data?.filter((item: any) => {\n        return (\n          item.ssn.includes(searchString) || item.id.includes(searchString)\n        );\n      }),\n    [searchString, data]\n  );\n  return (\n    <Container>\n      <Grid container wrap=\"wrap\" alignItems=\"center\" justify=\"space-between\">\n        <h1>Patients List</h1>\n        <div>\n          Search id or ssn:{\" \"}\n          <input\n            type=\"text\"\n            value={searchString}\n            onChange={(ev) => setSearchString(ev.target.value)}\n          />\n        </div>\n      </Grid>\n      <Pagination data={filteredData} />\n    </Container>\n  );\n}\n\nexport default HomeGrid;\n","import { forwardRef } from \"react\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport { Icons } from \"material-table\";\n\nexport const tableIcons: Icons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n","import MaterialTable from \"material-table\";\nimport RecursiveList from \"./RecursiveList\";\nimport { tableIcons } from \"./TableIcons\";\nexport default function TableMaterial({ data }: any) {\n  return (\n    <section>\n      <MaterialTable\n        icons={tableIcons}\n        options={{ pageSize: 20 }}\n        detailPanel={(rowData: any) => {\n          return (\n            <div>\n              <RecursiveList data={rowData} />\n            </div>\n          );\n        }}\n        columns={[\n          { title: \"id\", field: \"id\", searchable: true },\n          { title: \"first_name\", field: \"first_name\", searchable: false },\n          { title: \"last_name\", field: \"last_name\", searchable: false },\n          { title: \"email\", field: \"email\", searchable: false },\n          { title: \"gender\", field: \"gender\", searchable: false },\n          { title: \"ethnicity\", field: \"ethnicity\", searchable: false },\n          { title: \"birthdate\", field: \"birthdate\", searchable: false },\n          { title: \"ssn\", field: \"ssn\", searchable: true },\n          {\n            title: \"insured\",\n            field: \"insured\",\n            type: \"boolean\",\n            searchable: false,\n          },\n          {\n            title: \"deceased\",\n            field: \"deceased\",\n            type: \"boolean\",\n            searchable: false,\n          },\n          // {\n          //   title: \"diagnosis\",\n          //   field: \"diagnosis\",\n          //   render: (rowData) => <div>{JSON.stringify(rowData.diagnosis)}</div>,\n          // },\n          // {\n          //   title: \"pcp\",\n          //   field: \"pcp\",\n          //   render: (rowData) => <div>{JSON.stringify(rowData.pcp)}</div>,\n          // },\n        ]}\n        data={data}\n        title=\"patient data\"\n      />\n    </section>\n  );\n}\n","import { BrowserRouter, Route, Switch, Link, Redirect } from \"react-router-dom\";\nimport HomeGrid from \"./components/HomeGrid\";\nimport TableMaterial from \"./components/TableMaterial\";\nimport { patients } from \"./db.json\";\nfunction App() {\n  return (\n    <BrowserRouter>\n      <ul>\n        <li>\n          <Link to=\"/grid\">Grid List</Link>\n        </li>\n        <li>\n          <Link to=\"/table\">Table List</Link>\n        </li>\n      </ul>\n\n      <hr />\n      <Switch>\n        <Route path=\"/grid\" exact render={() => <HomeGrid data={patients} />} />\n        <Route\n          path=\"/table\"\n          exact\n          render={() => <TableMaterial data={patients} />}\n        />\n        <Route path=\"*\">\n          <Redirect to=\"/grid\" />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}